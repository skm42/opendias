openDias - Document Imaging Archive System

  1. Introduction
  2. Satisfying Dependencies
    2.1 Required
    2.2 Optional
    2.3 Shortcut - install dependencies by package
  3. Building
    3.1 As a user
    3.2 As a developer
  4. Running

-----------------------------------

1. Introduction

  [please add]

-----------------------------------

2. Satisfying Dependencies

  In order to include certain functionality you will 
  need to provide third party libraries and headers.
  This is a list of what you will need.

2.1 Required
------------

  sqlite3
  microhttpd
  uuid

2.2 Optional
------------ 

  2.2.1 For scanning
    sane
    leptonica

  2.2.2 For OCR
    tesseract-ocr
    leptonica

  2.2.3 For ODF import
    xml2
    zzip
    archive

  2.2.4 For PDF import
    poppler-cpp

2.3 Short cut
-------------

On, Debian or Ubuntu, you can do this by running:

  sudo apt-get install build-essential libsqlite3-dev libsane-dev \
    libmicrohttpd-dev uuid-dev libleptonica-dev libpoppler-cpp-dev \
    libtesseract-dev libxml2-dev libzzip-dev libarchive-dev \
    libfreeimage-dev \
    autoconf dh_make 

On, RedHat or Fedora, you can do this by running:

  su - 
  yum install gcc-c++ make sqlite-devel libmicrohttpd-devel \
    libuuid-devel sane-backends-devel freeimage-devel \
    tesseract-devel libxml2-devel zziplib-devel libarchive-devel 

-----------------------------------

3. Building

3.1 As a user
-------------
If you downloaded the release tarball (opendias-x.y.x.tar.gz)
You can build and install by issuing the following commands:

  ./configure
  make
  make install

3.2 As a developer
------------------
If you downloaded the source from, the GIT tree at GitHub.
You need to pre configure the source:

  install autoconf tools
  cd current_code
  autoreconf -iv
  ./configure -C
  make
  make install
  cd test
  [get setup by following the local README file]
  ./setupRun.sh 
  [refer to ../howto_build_distribute for details on publishing]

-----------------------------------

4. Running

Start and get to the apllication with:

  sudo /usr/local/bin/opendias

point a web browser at:

  http://localhost:8988/opendias

This needs to be 'localhost' as the default setting only allow
access from there. Visit 'Access Controls' and setup access
from other parts of your network [or specific user (not yet
implemented)]. Then you can point a browser at:

  http://myServer.com:8988/opendias

or use a forwarding proxy (eg Apache) to remove the port number. eg:

  RewriteRule ^/opendias(.*)$ http://myServer.com:8988/opendias$1 [P]

to be able to point a web browser at:

  http://myproxyServer.com/opendias

